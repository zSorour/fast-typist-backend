generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  username  String   @id
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  Player    Player?
}

model Player {
  account           Account            @relation(fields: [accountId], references: [username], onDelete: Cascade)
  accountId         String             @id @unique
  // Player plays many single player games
  singlePlayerGames SinglePlayerGame[]

  // Player plays many multiplayer games
  multiplayerGames PlayersOnMultiplayerGames[]

  // Player wins many multiplayer games
  gamesWon MultiplayerGame[]
}

model Game {
  id               String            @id @default(uuid())
  startDateTime    DateTime
  endDateTime      DateTime
  wpm              Float
  singlePlayerGame SinglePlayerGame?
  multiPlayerGame  MultiplayerGame?
}

model SinglePlayerGame {
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId String @id

  // A single player game is played by one player
  player   Player @relation(fields: [playerId], references: [accountId])
  playerId String

  score Int
}

model MultiplayerGame {
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId String @id

  // A multiplayer game is played by many players
  playersOnMultiplayerGames PlayersOnMultiplayerGames[]

  // A multiplayer game has one winner
  winner   Player @relation(fields: [winnerId], references: [accountId])
  winnerId String
}

model PlayersOnMultiplayerGames {
  player   Player @relation(fields: [playerId], references: [accountId])
  playerId String

  game   MultiplayerGame @relation(fields: [gameId], references: [gameId])
  gameId String

  // relationship attributes:
  score Int

  @@id([playerId, gameId])
}
